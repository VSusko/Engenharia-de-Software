@startuml inline_umlgraph_1.png
package pkg {
    class Model {
        - name : string
        - flows : vector<Flow*>
        - systems : vector<System*>
        + Model() : void
        + Model(const &other : Model) : void
        + Model& operator=(const &other : Model) : void
        + virtual ~Model() : void
        + simulate(initial : double, final : double, lapse : double) : void
        + clear() : void
        + report() : void
        + getSystem(const string _name) : System*
        + getFlow(const string _name) : Flow*
        + add(Flow* s) : bool
        + add(System* s) : bool
        + remove(Flow* s) : bool
        + remove(System* s) : bool
        - exists(Flow* f) : bool
        - exists(System* f) : bool
    }

    class System {
        - name : string
        - value : double
        + System() : void
        + System(const string _name, const double _value) : void
        + System(const System &other) : void
        + System& operator=(const &other : System) : void
        + virtual ~System() : void
        + getName() : string
        + setName(_name : string) : void
        + getValue() : double
        + setValue(_time : double) : void
        + clear() : void
    }

    class Flow {
        - name : string
        - source : System*
        - target : System*
        + Flow() : void
        + Flow(_name : string, _source : System*, _target : System*) : void
        + Flow(const &other : Flow) : void
        + Flow& operator=(const &other : Flow) : void
        + virtual ~Flow() : void
        + execute() : double
        + setTarget(s : System*) : void
        + setSource(s : System*) : void
        + setName(name : string) : void
        + getTarget() : System*
        + getSource() : System*
        + getName() : string
        + clear() : void
    }

    Model "1" o-- "0..*" System
    Model "1" o-- "0..*" Flow
    Flow "0..1" --> "source" System
    Flow "0..1" --> "target" System
}
@enduml
@startuml inline_umlgraph_2.eps
package pkg {
    class Model {
        - name : string
        - flows : vector<Flow*>
        - systems : vector<System*>
        + Model() : void
        + Model(const &other : Model) : void
        + Model& operator=(const &other : Model) : void
        + virtual ~Model() : void
        + simulate(initial : double, final : double, lapse : double) : void
        + clear() : void
        + report() : void
        + getSystem(const string _name) : System*
        + getFlow(const string _name) : Flow*
        + add(Flow* s) : bool
        + add(System* s) : bool
        + remove(Flow* s) : bool
        + remove(System* s) : bool
        - exists(Flow* f) : bool
        - exists(System* f) : bool
    }

    class System {
        - name : string
        - value : double
        + System() : void
        + System(const string _name, const double _value) : void
        + System(const System &other) : void
        + System& operator=(const &other : System) : void
        + virtual ~System() : void
        + getName() : string
        + setName(_name : string) : void
        + getValue() : double
        + setValue(_time : double) : void
        + clear() : void
    }

    class Flow {
        - name : string
        - source : System*
        - target : System*
        + Flow() : void
        + Flow(_name : string, _source : System*, _target : System*) : void
        + Flow(const &other : Flow) : void
        + Flow& operator=(const &other : Flow) : void
        + virtual ~Flow() : void
        + execute() : double
        + setTarget(s : System*) : void
        + setSource(s : System*) : void
        + setName(name : string) : void
        + getTarget() : System*
        + getSource() : System*
        + getName() : string
        + clear() : void
    }

    Model "1" o-- "0..*" System
    Model "1" o-- "0..*" Flow
    Flow "0..1" --> "source" System
    Flow "0..1" --> "target" System
}
@enduml
